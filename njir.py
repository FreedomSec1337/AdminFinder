import requests
import sys
import threading
import random
import argparse
import os
import signal
from colorama import Fore, init
from concurrent.futures import ThreadPoolExecutor

init(autoreset=True)

print(Fore.GREEN + """

    ___       __          _       _______           __
   /   | ____/ /___ ___  (_)___  / ____(_)___  ____/ /__  _____
  / /| |/ __  / __ `__ \/ / __ \/ /_  / / __ \/ __  / _ \/ ___/
 / ___ / /_/ / / / / / / / / / / __/ / / / / / /_/ /  __/ /
/_/  |_\__,_/_/ /_/ /_/_/_/ /_/_/   /_/_/ /_/\__,_/\___/_/

            """ + Fore.GREEN + "[ " + Fore.WHITE + "www.kirovgroup.org" + Fore.GREEN + " ]")
print()


–Ω–∞–π–¥–µ–Ω–æ = threading.Event()
–∑–∞–º–æ–∫ = threading.Lock()
–ø—Ä–æ–∫—Å–∏_—Å–ø–∏—Å–æ–∫ = []

–∞–≥–µ–Ω—Ç—ã_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
    "Mozilla/5.0 (X11; Linux x86_64)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)",
    "Googlebot/2.1 (+http://www.google.com/bot.html)"
]

def –∑–∞–≥—Ä—É–∑–∏—Ç—å_–ø—Ä–æ–∫—Å–∏(—Ñ–∞–π–ª):
    try:
        with open(—Ñ–∞–π–ª, 'r') as f:
            return [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        print(f"{Fore.RED}‚ùå –§–∞–π–ª –ø—Ä–æ–∫—Å–∏ '{—Ñ–∞–π–ª}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)

def –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_–∞–¥–º–∏–Ω_–ø—É—Ç—å(—Ü–µ–ª—å, –ø—É—Ç—å):
    if –Ω–∞–π–¥–µ–Ω–æ.is_set():
        return

    url = f"{—Ü–µ–ª—å}/{–ø—É—Ç—å}"
    –∑–∞–≥–æ–ª–æ–≤–∫–∏ = {"User-Agent": random.choice(–∞–≥–µ–Ω—Ç—ã_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)}

    –ø—Ä–æ–∫—Å–∏ = {}
    if –ø—Ä–æ–∫—Å–∏_—Å–ø–∏—Å–æ–∫:
        –∞–¥—Ä–µ—Å_–ø—Ä–æ–∫—Å–∏ = random.choice(–ø—Ä–æ–∫—Å–∏_—Å–ø–∏—Å–æ–∫)
        –ø—Ä–æ–∫—Å–∏ = {"http": f"http://{–∞–¥—Ä–µ—Å_–ø—Ä–æ–∫—Å–∏}", "https": f"http://{–∞–¥—Ä–µ—Å_–ø—Ä–æ–∫—Å–∏}"}

    try:
        –æ—Ç–≤–µ—Ç = requests.get(url, headers=–∑–∞–≥–æ–ª–æ–≤–∫–∏, timeout=5, proxies=–ø—Ä–æ–∫—Å–∏)
        —Å—Ç–∞—Ç—É—Å = –æ—Ç–≤–µ—Ç.status_code

        with –∑–∞–º–æ–∫:
            if —Å—Ç–∞—Ç—É—Å == 200 and not –Ω–∞–π–¥–µ–Ω–æ.is_set():
                –Ω–∞–π–¥–µ–Ω–æ.set()
                print(f"{Fore.GREEN}{url} [200] > –ì–û–¢–û–í–û")
                print(f"\n{Fore.CYAN}[‚Ä¢] –ù–∞–π–¥–µ–Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: {url}\n")
                os.kill(os.getpid(), signal.SIGTERM)

            elif —Å—Ç–∞—Ç—É—Å == 404:
                print(f"{Fore.RED}{url} [404]")
            else:
                print(f"{Fore.YELLOW}{url} [{—Å—Ç–∞—Ç—É—Å}]")
    except:
        with –∑–∞–º–æ–∫:
            print(f"{Fore.RED}{url} [–û–®–ò–ë–ö–ê]")

def –≥–ª–∞–≤–Ω–∞—è():
    –ø–∞—Ä—Å–µ—Ä = argparse.ArgumentParser()
    –ø–∞—Ä—Å–µ—Ä.add_argument('--target', required=True, help='–¶–µ–ª–µ–≤–æ–π URL')
    –ø–∞—Ä—Å–µ—Ä.add_argument('--threads', type=int, default=10, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤')
    –ø–∞—Ä—Å–µ—Ä.add_argument('--proxy', help='–§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–∫—Å–∏')
    –∞—Ä–≥—É–º–µ–Ω—Ç—ã = –ø–∞—Ä—Å–µ—Ä.parse_args()

    —Ü–µ–ª—å = –∞—Ä–≥—É–º–µ–Ω—Ç—ã.target.rstrip('/')
    –ø–æ—Ç–æ–∫–∏ = –∞—Ä–≥—É–º–µ–Ω—Ç—ã.threads

    if –∞—Ä–≥—É–º–µ–Ω—Ç—ã.proxy:
        global –ø—Ä–æ–∫—Å–∏_—Å–ø–∏—Å–æ–∫
        –ø—Ä–æ–∫—Å–∏_—Å–ø–∏—Å–æ–∫ = –∑–∞–≥—Ä—É–∑–∏—Ç—å_–ø—Ä–æ–∫—Å–∏(–∞—Ä–≥—É–º–µ–Ω—Ç—ã.proxy)

    try:
        with open("admin_list.txt", "r") as f:
            –ø—É—Ç–∏ = [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        print(f"{Fore.RED}‚ùå –§–∞–π–ª 'admin_list.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)

    print(f"\n{Fore.CYAN}üü° –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {len(–ø—É—Ç–∏)} –ø—É—Ç–µ–π –ø–æ {—Ü–µ–ª—å} —Å {–ø–æ—Ç–æ–∫–∏} –ø–æ—Ç–æ–∫–∞–º–∏...\n")

    with ThreadPoolExecutor(max_workers=–ø–æ—Ç–æ–∫–∏) as –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:
        for –ø—É—Ç—å in –ø—É—Ç–∏:
            if –Ω–∞–π–¥–µ–Ω–æ.is_set():
                break
            –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.submit(–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_–∞–¥–º–∏–Ω_–ø—É—Ç—å, —Ü–µ–ª—å, –ø—É—Ç—å)

if __name__ == "__main__":
    –≥–ª–∞–≤–Ω–∞—è()
